#include "Ray.h"

////////////////////////////////////////////////////////////////////////////////
Ray::Ray(glm::vec3 origin, glm::vec3 direction)
{
	this->origin = origin;
	this->direction = glm::normalize(direction);
	this->hasHit = false;
	this->hitTime = 0.0f;
	this->hitNormal = glm::vec3(0.0f);
	this->hitPoint = glm::vec3(0.0f);
	this->hitDistance = 0.0f;
}
////////////////////////////////////////////////////////////////////////////////
Ray::~Ray()
{

}
////////////////////////////////////////////////////////////////////////////////
void Ray::handleHit(float val)
{
	this->hasHit = true;
	this->hitTime = val;
	this->hitPoint = origin + direction * this->hitTime;
	this->hitDistance = glm::length(direction * this->hitTime);
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setHitTime(float val)
{
	this->hitTime = val;
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setOrigin(glm::vec3 val)
{
	this->origin = val;
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setDirection(glm::vec3 val)
{
	this->direction = val;
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setHasHit(bool val) 
{
	this->hasHit = val;
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setHitNormal(glm::vec3 val)
{
	this->hitNormal = val;
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setHitPoint(glm::vec3 val)
{
	this->hitPoint = val;
}
////////////////////////////////////////////////////////////////////////////////
void Ray::setHitDistance(float val)
{
	this->hitDistance = val;
}
////////////////////////////////////////////////////////////////////////////////
glm::vec3 Ray::getOrigin()
{
	return this->origin;
}
////////////////////////////////////////////////////////////////////////////////
glm::vec3 Ray::getDirection()
{
	return this->direction;
}
////////////////////////////////////////////////////////////////////////////////
bool Ray::getHasHit()
{
	return this->hasHit;
}
////////////////////////////////////////////////////////////////////////////////
float Ray::getHitTime()
{
	return this->hitTime;
}
////////////////////////////////////////////////////////////////////////////////
glm::vec3 Ray::getHitNormal()
{
	return this->hitNormal;
}
////////////////////////////////////////////////////////////////////////////////
glm::vec3 Ray::getHitPoint()
{
	return this->hitPoint;
}
////////////////////////////////////////////////////////////////////////////////
float Ray::getHitDistance()
{
	return this->hitDistance;
}
////////////////////////////////////////////////////////////////////////////////
glm::vec3 Ray::guessPos(float t)
{
	return origin + direction * t;
}